name: CI-Frameworks
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  test:
    name: ${{ matrix.framework }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      FRAMEWORK: ${{ matrix.framework }}
      CASE: ${{ matrix.case }}
      FILE: ${{ matrix.file }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - framework: 'GenX'
            case: '1_three_zones'
            file: 'main.jl'
            os: ubuntu-latest
          - framework: 'PowerModels'
            case: 'pglib_opf_case162_ieee_dtc.m'
            file: 'main.jl'
            os: ubuntu-latest
          - framework: 'Sienna'
            case: 'PTDF-6-150'
            file: 'tutorial_1.jl'
            os: ubuntu-latest
          # - framework: 'SpineOpt'
          #   case: '1_electrolyzer_with_rolling_horizon.json'
          #   file: 'main.jl'
          #   os: ubuntu-latest
          - framework: 'TulipaEnergyModel'
            case: '1_EU_investment_simple-24'
            file: 'main.jl'
            os: ubuntu-latest
          - framework: 'UnitCommitment'
            case: 'matpower/case14/2017-01-01' # small non-default case
            file: 'main.jl'
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.10'
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - name: Instantiate
        shell: julia --color=yes {0}
        run: |
          cd(ENV["FRAMEWORK"])
          import Pkg
          Pkg.activate(".")
          Pkg.instantiate()
      - name: Test
        run: |
          julia --project=${{ matrix.framework }} ${{ matrix.framework }}/${{ matrix.file }} --help
          julia --project=${{ matrix.framework }} ${{ matrix.framework }}/${{ matrix.file }} --all
          julia --project=${{ matrix.framework }} ${{ matrix.framework }}/${{ matrix.file }} --case=${{ matrix.case }} --run --write
          julia --project=${{ matrix.framework }} ${{ matrix.framework }}/${{ matrix.file }} --case=${{ matrix.case }} --run --profile
